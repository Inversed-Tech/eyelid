name: 'Build and Run'

on:
  workflow_dispatch:

  push:
    branches:
      - main

  pull_request:


concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

# The actions variables and shell env namespaces are different, so we need to import every relevant variable here:
# <https://github.com/Inversed-Tech/eyelid/settings/variables/actions>
env:
  # Logging
  CARGO_TERM_COLOR: ${{ vars.CARGO_TERM_COLOR }}
  RUST_LOG: ${{ vars.RUST_LOG }}
  # These backtrace variables are used by the `backtrace` crate to control the backtrace verbosity in binaries and libraries.
  # We always want them set to the same value in CI. 
  RUST_BACKTRACE: ${{ vars.RUST_BACKTRACE }}
  RUST_LIB_BACKTRACE: ${{ vars.RUST_BACKTRACE }}

jobs:
  build:
    name: Rust Build and Run

    strategy:
      # We want to run tiny_poly to completion, so bugs are easier to diagnose
      fail-fast: false      
      matrix:
        # rustc config options:
        # * "--cfg tiny_poly" is covered by ci-test.yml
        cfg: [""]
        # cargo feature options:
        # * "--no-default-features" is the same as "" for now
        # * "--all-features" is the same as "--features benchmark" for now, which is covered by ci-bench.yml
        features: [""]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: r7kamura/rust-problem-matchers@v1

      - name: Build All Targets
        run: |
          export RUSTFLAGS="-D warnings ${{ matrix.cfg}}"
          cargo build --release --all-targets ${{ matrix.features}}

      - name: Run Binaries
        run: |
          export RUSTFLAGS="-D warnings ${{ matrix.cfg}}"
          cargo run --release ${{ matrix.features}}
